1 Uruchamiam powershella z uprawieniami administratora.
  Następnie używam komendy Set-ExecutionPolicy Bypass. Po użyciu tej komedny jako zwykły użytkownik mogę korzystać ze skryptów.
  
2 Użyłem komendy Get-ExecutionPolicy w celcu sprawdzenia ExecutionPolicy, otrzymałem Bypass.

3 Za pomocą komendy Get-Module -ListaAvaible i podania ścieżki do pliku udało mi sie zapisać listę poleceń do podanego pliku.

4 Obraz maszyny wirtualnej z szuflandi pobierał się 43 minuty i 52 sekundy .

5 Użyłem start-bitstransfer do pobrania obrazu z internetu, tylko nie mogłem zmierzyć czasu pobierania obrazu.
  Poprawka jednak sie udało Measure-command, a potem cała komenda do transferu w nawiasie klamrowym.

6 Call=& użyłem tego polecenia do opalenia notatnika, właczączyłem też excela.

7 Get-PSDrive mogę wyświetlić listę dysków.

8 Za pomocą ls można wylistować zawartosć rejestru.

9 Przy użyciu komendy remove-item pousuwałem niepotrzebne pliki i foldery.

10 Zmieniłem komendę Get-module -listavaible | ? {$_.Version -ge"2.0.0.0"}, tak, że zamiast wersji modułów większych równych 2, użyłem -lt do wypisania mniejszych od 2.

11 W powershellu mozna tworzyć własne funkcje. Można stworzyć funkcje, która wyrzyuca na ekran błąd o podanej przez siebie treści.
   Wywołanie funkcji: givemepopup -text "your cat has meowed" - title "cat error" -icon error spowoduje pokaznie sie na ekranie "kociego błędu", 
   można stworzyć też pętlę, która wyświetli błąd 10-krotnie for($i=1; $i -le 10; $i++) {treść komunikatu}.


